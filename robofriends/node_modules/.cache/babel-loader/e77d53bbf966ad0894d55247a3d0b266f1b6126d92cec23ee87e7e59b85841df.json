{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hhafn\\\\robofriends\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\n\n//on constructor, super must be called this constructor shows a state of the app\n//each state has what is in the search field and the robots being displayed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    //this updates searchField to show whatever user is typing\n    this.onSearchChange = event => {\n      this.setState({\n        searchField: event.target.value\n      });\n    };\n    this.state = {\n      robots: [],\n      searchField: ''\n    };\n  }\n\n  //this is what is updating the app. changes the robots that are called? idk really\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => {\n      response.json();\n    });\n    this.setState({\n      robots: robots\n    });\n  }\n  //this renders code to front end of app\n  //filteredRobots filters robots that match with input in searchField\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tc\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"f1\",\n        children: \"RoboFriends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n        searchChange: this.onSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardList, {\n        robots: filteredRobots\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","CardList","SearchBox","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","setState","searchField","target","value","state","robots","componentDidMount","fetch","then","response","json","render","filteredRobots","filter","robot","name","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","searchChange"],"sources":["C:/Users/hhafn/robofriends/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\r\nimport CardList from './CardList';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\n\r\n//on constructor, super must be called this constructor shows a state of the app\r\n//each state has what is in the search field and the robots being displayed\r\nclass App extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchField: ''\r\n        }\r\n    }\r\n    \r\n//this is what is updating the app. changes the robots that are called? idk really\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response =>{\r\n            response.json();\r\n        })\r\n        this.setState({robots: robots});\r\n    }\r\n\r\n//this updates searchField to show whatever user is typing\r\n    onSearchChange = (event) =>{\r\n        this.setState({ searchField: event.target.value})\r\n    }\r\n\r\n//this renders code to front end of app\r\n//filteredRobots filters robots that match with input in searchField\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot =>{ \r\n            return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n        return(\r\n            <div className = 'tc'>\r\n                <h1 className = 'f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <CardList robots={filteredRobots}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App; "],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,QAAO,OAAO;AACtC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,WAAW;;AAElB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,GAAG,SAASL,SAAS;EACvBM,WAAWA,CAAA,EAAE;IACT,KAAK,CAAC,CAAC;IAgBf;IAAA,KACIC,cAAc,GAAIC,KAAK,IAAI;MACvB,IAAI,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAK,CAAC,CAAC;IACrD,CAAC;IAlBG,IAAI,CAACC,KAAK,GAAG;MACTC,MAAM,EAAE,EAAE;MACVJ,WAAW,EAAE;IACjB,CAAC;EACL;;EAEJ;EACIK,iBAAiBA,CAAA,EAAE;IACfC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAG;MACbA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC;IACF,IAAI,CAACV,QAAQ,CAAC;MAACK,MAAM,EAAEA;IAAM,CAAC,CAAC;EACnC;EAOJ;EACA;EACIM,MAAMA,CAAA,EAAE;IACJ,MAAMC,cAAc,GAAG,IAAI,CAACR,KAAK,CAACC,MAAM,CAACQ,MAAM,CAACC,KAAK,IAAG;MACpD,OAAOA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACb,KAAK,CAACH,WAAW,CAACe,WAAW,CAAC,CAAC,CAAC;IAClF,CAAC,CAAC;IACF,oBACIrB,OAAA;MAAKuB,SAAS,EAAG,IAAI;MAAAC,QAAA,gBACjBxB,OAAA;QAAIuB,SAAS,EAAG,IAAI;QAAAC,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrC5B,OAAA,CAACF,SAAS;QAAC+B,YAAY,EAAE,IAAI,CAAC1B;MAAe;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/C5B,OAAA,CAACH,QAAQ;QAACa,MAAM,EAAEO;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAEd;AACJ;AAEA,eAAe3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}